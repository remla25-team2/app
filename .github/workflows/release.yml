name: Release App
on: 
    push:
        tags: 
          - 'v*.*'
        branches:
          - main
    pull_request:
        branches:
          - main
jobs:
    build:
      runs-on: ubuntu-latest
      permissions:
        contents: write
        packages: write
        id-token: write
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Required to get all tags for versioning

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.10'

        - name: Install lib-version
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Set build metadata with lib-version
          id: build_meta
          run: |
            # Get metadata and set as environment variables
            lib-version version metadata >> $GITHUB_ENV
            
            # Also display for logging
            echo "Build metadata from lib-version:"
            lib-version version metadata

        - uses: docker/setup-qemu-action@v3
        - uses: docker/setup-buildx-action@v2
        
        - uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: remla25-team2-bot
            password: ${{ secrets.GHBOT_TOKEN }}
            
        # For tagged releases
        - name: Get release version with lib-version
          id: get_version
          run: |
            VERSION=$(lib-version version current)
            MAJOR=$(echo "$VERSION" | cut -d . -f 1)
            MINOR=$(echo "$VERSION" | cut -d . -f 2)
            echo "version=$VERSION" >> $GITHUB_ENV
            echo "version_major=$MAJOR" >> $GITHUB_ENV
            echo "version_minor=$MINOR" >> $GITHUB_ENV
            echo "version=$VERSION"
            echo "version_major=$MAJOR"
            echo "version_minor=$MINOR"
            BUMPED_VERSION=$(lib-version version next)
            echo "bumped_version=$BUMPED_VERSION"
        
        - name: Bump version with lib-version
          if: startsWith(github.ref, 'refs/tags/')
          id: bump_version
          run: |
            lib-version bump patch --push
            VERSION=$(lib-version version current)
            MAJOR=$(echo "$VERSION" | cut -d . -f 1)
            MINOR=$(echo "$VERSION" | cut -d . -f 2)
            echo "version=$VERSION" >> $GITHUB_ENV
            echo "version_major=$MAJOR" >> $GITHUB_ENV
            echo "version_minor=$MINOR" >> $GITHUB_ENV
            echo "version=$VERSION"
            echo "version_major=$MAJOR"
            echo "version_minor=$MINOR"

        - name: Create builder
          id: buildx
          run: |
            IMG="ghcr.io/${{ github.repository }}"
            IMG=${IMG@L}
            
            docker buildx create --use --name multiarch-builder
            docker buildx inspect --bootstrap
            
        
        - name: Build and push multi-arch image (release)
          if: startsWith(github.ref, 'refs/tags/')
          run: |
            IMG="ghcr.io/${{ github.repository }}"
            IMG=${IMG@L}

            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --tag $IMG:${{ env.version }} \
              --tag $IMG:${{ env.version_major }}.${{ env.version_minor }}.latest \
              --tag $IMG:${{ env.version_major }}.latest \
              --tag $IMG:latest \
              --push \
              .
              
        # For main branch (pre-release)
        - name: Get pre-release version with lib-version
          if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
          id: pre_version
          run: |
            NEXT_VERSION=$(lib-version version next)
            # Use timestamp from lib-version metadata (already in env)
            PRE_VERSION="${NEXT_VERSION}-pre-${{ env.timestamp }}"
            echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT
            echo "pre_version=$PRE_VERSION" >> $GITHUB_OUTPUT
            echo "Pre-release version: $PRE_VERSION"
            
        - name: Build and push multi-arch image (pre-release)
          if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
          run: |
            IMG="ghcr.io/${{ github.repository }}"
            IMG=${IMG@L}
            
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --tag $IMG:${{ env.pre_version }} \
              --tag $IMG:pre-release \
              --push \
              .
